!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Julia	Y,unknown	/name defined in other modules/
!_TAG_KIND_DESCRIPTION!Julia	c,constant	/Constants/
!_TAG_KIND_DESCRIPTION!Julia	f,function	/Functions/
!_TAG_KIND_DESCRIPTION!Julia	g,field	/Fields/
!_TAG_KIND_DESCRIPTION!Julia	m,macro	/Macros/
!_TAG_KIND_DESCRIPTION!Julia	n,module	/Modules/
!_TAG_KIND_DESCRIPTION!Julia	s,struct	/Structures/
!_TAG_KIND_DESCRIPTION!Julia	t,type	/Types/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Julia	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/fux/iturriak/desman/Desman.jl/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!Julia!module	imported	/loaded by "import"/
!_TAG_ROLE_DESCRIPTION!Julia!module	namespace	/only some symbols in it are imported/
!_TAG_ROLE_DESCRIPTION!Julia!module	used	/loaded by "using"/
!_TAG_ROLE_DESCRIPTION!Julia!unknown	imported	/loaded by "import"/
!_TAG_ROLE_DESCRIPTION!Julia!unknown	used	/loaded by "using"/
Biotope	src/biotope.jl	/^  function Biotope(df::DataFrame, cov::DataFrame, x₀::Vector{Float64})$/;"	f	struct:Biotope
Biotope	src/biotope.jl	/^struct Biotope $/;"	s
Desman	src/Desman.jl	/^module Desman$/;"	n
N	src/biotope.jl	/^  N::Int64 # number of distinct latrines$/;"	g	struct:Biotope
df	src/biotope.jl	/^  df::DataFrame$/;"	g	struct:Biotope
dist	src/likelihood.jl	/^function dist(df::DataFrame)$/;"	f
freq	src/biotope.jl	/^  freq::Vector{Int64}$/;"	g	struct:Biotope
idx	src/biotope.jl	/^  idx::Vector{Vector{Int64}}$/;"	g	struct:Biotope
latrine	src/biotope.jl	/^  latrine::Vector{String}$/;"	g	struct:Biotope
logVraisemblanceNoCov	src/likelihood.jl	/^function logVraisemblanceNoCov(b::Biotope)$/;"	f
proxyDist	src/likelihood.jl	/^    function proxyDist(w, λ) $/;"	f	function:dist
x₀	src/biotope.jl	/^  x₀::Vector{Float64} # starting point for parameters$/;"	g	struct:Biotope
Σ	src/biotope.jl	/^  Σ::DataFrame$/;"	g	struct:Biotope
∇f!	raw_script.jl	/^function ∇f!(g,x)$/;"	f
