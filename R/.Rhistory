include("Fitting_model_with_random_effet (v3).R")
run("Fitting_model_with_random_effet (v3).R")
load("Fitting_model_with_random_effet (v3).R")
source("Fitting_model_with_random_effet (v3).R")
install.packages(“dplyr”)
install.packages(“dplyr”)
install.packages("dplyr")
source("Fitting_model_with_random_effet (v3).R")
install.packages("gltools")
exit
source("Fitting_model_with_random_effet (v3).R")
Df
size(Df)
typeof(Df)
class(Df)
source("Fitting_model_with_random_effet (v3).R")
Df1
df2
Df2
Df2
Df1
names(Df1)
c
Df
help(full_join)
source("Fitting_model_with_random_effet (v3).R")
Mat.cov
Df
Mat.Cov
class(Mat.Cov)
id.col.cov
Df
Df$names
names(Df)
Mat.Cov
Mat.Cov$slope
nb.cov
source("Fitting_model_with_random_effet (v3).R")
df[!,duration]
df[!,:duration]
Latrine
class(Latrines)
class(Latrine)
par.init.base
idx
Ing
Inf
1 / Inf
df$durationg(38) 
df$durationg[38] 
df$durationg
Df$durationg
Df$durationg[38]
class(Df$durationg[38])
typeof(Df$durationg[38])
source("Fitting_model_with_random_effet (v3).R")
par.init.base
par.init.base
source("Fitting_model_with_random_effet (v3).R")
m
size(m)
lentgh(m)
lenght(m)
length(m)
nrowd(df)
nrow(Df)
nrow(idx)
nrow(idx)
idx
Df
m
2  5  2  2  6  3  2  14  26  7  8  2  2  2  2  2  2  2  2  2  3  26  4  2  2  2  4  2  7  12  17  3  11  12  6  19  7  5  10  12
ehe = c(2,5,2,2,6,3,2,14,26,7,8,2,2,2,2,2,2,2,2,2,3,26,4,2,2,2,4,2,7,12,17,3,11,12,6,19,7,5,10,12)
ehe -m 
source("Fitting_model_with_random_effet (v3).R")
install.packages("gtools")
source("Fitting_model_with_random_effet (v3).R")
Mat.Sel.Var
vector(mode="numeric", length=3)
dgamma
pweibull
help(pweibull)
help(pweibull)
pweibull(c(0.3), 2, 5)
dgamma
help(dgamma)
dgamma(0.3,2,5)
dgamma(0.3,2,scale=5)
dgamma(0.3,shape=2,scale=5)
dgamma(0.3,shape=2,rate=1/5., scale=5)
dgamma(0.3,shape=2, scale=5)
pgamma(0.3,shape=2, scale=5)
dgamma(12,shape=2, scale=4)
include("Fitting_model_with_random_effet (v3).R")
source("Fitting_model_with_random_effet (v3).R")
Shared.LogVraisemblance.NoCov(par.init.base)
par.init.base
write
write("huhu")
print("huhu")
print(2)
print(2, "huhu")
source("Fitting_model_with_random_effet (v3).R")
source("Fitting_model_with_random_effet (v3).R")
Shared.LogVraisemblance.NoCov(par.init.base)
Shared.LogVraisemblance.NoCov(par.init.base)
source("Fitting_model_with_random_effet (v3).R")
source("Fitting_model_with_random_effet (v3).R")
Shared.LogVraisemblance.NoCov(par.init.base)
source("Fitting_model_with_random_effet (v3).R")
source("Fitting_model_with_random_effet (v3).R")
source("Fitting_model_with_random_effet (v3).R")
help(pweibull)
help(pweibull)
help(pweibull)
help(dgamma)
help(
 !!*
pweibull(0.3,2,5)
idx
df.durationg[6]
df$durationg[6]
Df$durationg[6]
Df$durationg[7]
if (i==1)
cat("go")
end
if (i==1)
source("Fitting_model_with_random_effet (v3).R")
source("Fitting_model_with_random_effet (v3).R")
faux(3.2)
i
idx
Latrine[12¿
Latrine[12]
w = 34.2
Df$durationd[idx]
w = 12.45
pweibull(q = Df.tmp$durationd[1], scale = w*exp(lalpha), shape = exp(lbeta), lower.tail = FALSE)
lalpha
 Df.tmp$durationd[1]
w
lalpha
lbeta
 Df.tmp$durationd[1]
pweibull(q = Df.tmp$durationd[1], scale = w*exp(lalpha), shape = exp(lbeta), lower.tail = FALSE)
exp(lbeta)
pweibull(q = Df.tmp$durationd[1], scale = w*exp(lalpha), shape = exp(lbeta))
pweibull(12.4, 2, 3) - (12.4/3)^2
pweibull(12.4, 2, 3) - (1-exp(-(12.4/3)^2))
pweibull(q = Df.tmp$durationd[1], scale = w*exp(lalpha), shape = exp(lbeta))
w*exp(lapha)
w*exp(lalpha)
pweibull(q = Df.tmp$durationd[1], scale = w*exp(lalpha), shape = exp(lbeta))
exp(lbeta)
pweibull(100, scale = w*exp(lalpha), shape = exp(lbeta))
pweibull(1000, scale = w*exp(lalpha), shape = exp(lbeta))
pweibull(100, scale = w*exp(lalpha), shape = exp(lbeta))
?pweibull
pweibull(100, scale = w*exp(lalpha), shape = exp(lbeta), lower.tail=FALSE)
pweibull(100, scale = w*exp(lalpha), shape = exp(lbeta))
pweibull(100, scale = w*exp(lalpha), shape = exp(lbeta))
rlnorm(50)
?pexp
?pexp
?pweibull
pweibull(100, scale = w*exp(lalpha), shape = exp(lbeta))
1-exp(-(100./exp(1))^(w*exp(lapha)))
1-exp(-(100./exp(1))^(w*exp(lalpha)))
1-exp(-(100./exp(beta))^(w*exp(lalpha)))
1-exp(-(100./exp(lbeta))^(w*exp(lalpha)))
2^2
pweibull(100, w*exp(lalpha), exp(lbeta))
pweibull(117, w*exp(lalpha), exp(lbeta))
pweibull(117., w*exp(lalpha), exp(lbeta))
pweibull(100, scale = w*exp(lalpha), shape = exp(lbeta))
pweibull(100,  w*exp(lalpha),  exp(lbeta))
faux(12.34)
faux(117)
faux(0.3)
faux(11100)
faux(110)
pweibull(q = Df.tmp$durationd[j], scale = w*exp(lalpha), shape = exp(lbeta), lower.tail = FALSE)
pweibull(q = 0.2, scale = w*exp(lalpha), shape = exp(lbeta), lower.tail = FALSE)
w
w*exp(lapha)
w*exp(lalpha)
w*exp(lalpha)
pweibull(q = 0.2, scale = w*exp(lalpha), shape = exp(lbeta), lower.tail = FALSE)
1-exp(-(0.2/(w*exp(lalpha))^(exp(lbeta))))
1-exp(-(0.2/(w*exp(lalpha)))^(exp(lbeta)))
pweibull(q = 0.2, scale = w*exp(lalpha), shape = exp(lbeta))
pweibull(q = 0.2, scale = w*exp(lalpha), shape = exp(lbeta), lower.tail = FALSE)
?pweibull
1-pweibull(q = 0.2, scale = w*exp(lalpha), shape = exp(lbeta), lower.tail = FALSE)
1-pweibull(q = 0.2, scale = w*exp(lalpha), shape = exp(lbeta))
pweibull(q = 0.2, scale = w*exp(lalpha), shape = exp(lbeta), lower.tail = FALSE)
exit
browser')
exit
exit()
c
Shared.LogVraisemblance.NoCov(par.init.base)
c
source("Fitting_model_with_random_effet (v3).R")
Shared.LogVraisemblance.NoCov(par.init.base)
Shared.LogVraisemblance.NoCov(c(1,2,3))
Shared.LogVraisemblance.NoCov(c(1,0,0))
Shared.LogVraisemblance.NoCov(c(1,0,0))
Shared.LogVraisemblance.NoCov(par.init.base)
ls
source("Fitting_model_with_random_effet (v3).R")
Shared.LogVraisemblance.NoCov(par.init.base)
ls
source("Fitting_model_with_random_effet (v3).R")
source("Fitting_model_with_random_effet (v3).R")
Mat.Sel.Var
nb.cov
?permutations
rep(x=0, times=3°
rep(x=0, times=3)
