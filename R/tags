!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!R	constructor	/function used for making value assigned to the nameattr tag/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!R	L,list	/lists explicitly created with `list()'/
!_TAG_KIND_DESCRIPTION!R	c,vector	/vectors explicitly created with `c()'/
!_TAG_KIND_DESCRIPTION!R	d,dataframe	/data frame explicitly created with `data.frame()'/
!_TAG_KIND_DESCRIPTION!R	f,function	/functions/
!_TAG_KIND_DESCRIPTION!R	g,globalVar	/global variables having values other than function()/
!_TAG_KIND_DESCRIPTION!R	l,library	/libraries/
!_TAG_KIND_DESCRIPTION!R	n,nameattr	/names attribtes in vectors, lists, or dataframes/
!_TAG_KIND_DESCRIPTION!R	s,source	/sources/
!_TAG_KIND_DESCRIPTION!R	v,functionVar	/function variables having values other than function()/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!R	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/fux/iturriak/desman/R/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!R!library	library	/library attached by library function/
!_TAG_ROLE_DESCRIPTION!R!library	require	/library attached by require function/
!_TAG_ROLE_DESCRIPTION!R!source	source	/source loaded by source fucntion/
Dates	data/DesmanScat.R	/^Dates <- as.Date(x = colnames(Desman)[-1])$/;"	g
Desman	data/DesmanScat.R	/^Desman <- Desman[-c(16, 22, 37), ]$/;"	g
Desman	data/DesmanScat.R	/^Desman <- read_excel("Desman.xlsx", na = "NA")$/;"	g
Desman.Fit1	Latrine_as_cov.R	/^Desman.Fit1 <- survreg(formula = Desman.Surv ~ 1, dist = "weibull",$/;"	g
Desman.Fit2	Latrine_as_cov.R	/^Desman.Fit2 <- survreg(formula = Desman.Surv ~ siteID, dist = "weibull",$/;"	g
Desman.Surv	Latrine_as_cov.R	/^Desman.Surv <- SurvIC(t0 = 0, lower = DesmanFeb24$durationd, upper = DesmanFeb24$durationg, $/;"	g
Desman.Surv	Latrine_as_cov.R	/^Desman.Surv <- SurvIC(t0 = 0, lower = Df$durationd, upper = Df$durationg, $/;"	g
Desman.Surv	data/DesmanScat.R	/^Desman.Surv <- SurvIC(t0 = 0, lower = Df$left, upper = Df$right, $/;"	g
Desman.Surv.v2	Latrine_as_cov.R	/^Desman.Surv.v2 <- SurvIC(t0 = 0, lower = DesmanFeb24.v2$durationd, $/;"	g
Desman.Surv.v3	Latrine_as_cov.R	/^Desman.Surv.v3 <- SurvIC(t0 = 0, lower = DesmanFeb24.v3$durationd, $/;"	g
DesmanFeb24	Latrine_as_cov.R	/^DesmanFeb24 <- cbind.data.frame(DesmanFeb24, event)$/;"	g
DesmanFeb24	Latrine_as_cov.R	/^DesmanFeb24 <- read.csv2(".\/data\/survcalibfeb2024_1.csv")$/;"	g
DesmanFeb24.v2	Latrine_as_cov.R	/^DesmanFeb24.v2 <- DesmanFeb24[-idx, ]            $/;"	g
DesmanFeb24.v3	Latrine_as_cov.R	/^DesmanFeb24.v3 <- rbind.data.frame(DesmanFeb24, DesmanFeb24)$/;"	g
Df	Fitting_model_with_random_effet (v3).R	/^Df <- bind_rows(Df1, Df2)$/;"	g
Df	Fitting_model_with_random_effet (v3).R	/^Df <- full_join(Df, Mat.Cov, by = join_by(siteID))$/;"	g
Df	Fitting_model_without_random_effet---v2.R	/^Df <- bind_rows(Df1, Df2)$/;"	g
Df	Fitting_model_without_random_effet---v2.R	/^Df <- full_join(Df, Mat.Cov, by = join_by(siteID))$/;"	g
Df	Latrine_as_cov.R	/^Df <- cbind.data.frame(Df, event)$/;"	g
Df	data/DesmanScat.R	/^  Df <- rbind.data.frame(Df, Df.new)$/;"	g
Df	data/DesmanScat.R	/^Df <- NULL$/;"	g
Df.new	data/DesmanScat.R	/^  Df.new <- data.frame(latrine, left, right)$/;"	d
Df.tmp	Fitting_model_with_random_effet (v3).R	/^    Df.tmp <- Df[idx, ]$/;"	v	function:Shared.LogVraisemblance.MultCov
Df.tmp	Fitting_model_with_random_effet (v3).R	/^    Df.tmp <- Df[idx, ]$/;"	v	function:Shared.LogVraisemblance.NoCov
Df.tmp	Fitting_model_with_random_effet (v3).R	/^    Df.tmp <- Df[idx, ]$/;"	v	function:Shared.LogVraisemblance.SingleCov
Df1	Fitting_model_with_random_effet (v3).R	/^Df1 <- read.csv2(file = ".\/data\/survcalibfeb2024_1.csv")$/;"	g
Df1	Fitting_model_without_random_effet---v2.R	/^Df1 <- read.csv2(file = ".\/data\/survcalibfeb2024_1.csv")$/;"	g
Df2	Fitting_model_with_random_effet (v3).R	/^Df2 <- read.csv2(file = ".\/data\/survcalibaug2024_1.csv")$/;"	g
Df2	Fitting_model_without_random_effet---v2.R	/^Df2 <- read.csv2(file = ".\/data\/survcalibaug2024_1.csv")$/;"	g
Latrine	Fitting_model_with_random_effet (v3).R	/^Latrine <- sort(unique(Df$siteID))$/;"	g
LogVraisemblance.MultCov	Fitting_model_with_random_effet (v3).R	/^LogVraisemblance.MultCov <- function(par) {$/;"	f
LogVraisemblance.MultCov	Fitting_model_without_random_effet---v2.R	/^LogVraisemblance.MultCov <- function(par) {$/;"	f
LogVraisemblance.NoCov	Fitting_model_without_random_effet---v2.R	/^LogVraisemblance.NoCov <- function(par) {$/;"	f
LogVraisemblance.SingleCov	Fitting_model_without_random_effet---v2.R	/^LogVraisemblance.SingleCov <- function(par) {$/;"	f
Mat.Cov	Fitting_model_with_random_effet (v3).R	/^Mat.Cov <- read.csv(file = ".\/data\/Latrine_cov.csv", header = TRUE, sep = ";", dec = ",", row./;"	g
Mat.Cov	Fitting_model_without_random_effet---v2.R	/^Mat.Cov <- read.csv(file = ".\/data\/Latrine_cov.csv", header = TRUE, sep = ";", dec = ",", row./;"	g
Mat.Sel.Var	Fitting_model_with_random_effet (v3).R	/^Mat.Sel.Var <- permutations(n = 2, r = nb.cov, v = c(TRUE, FALSE), repeats = TRUE)$/;"	g
Mat.Sel.Var	Fitting_model_without_random_effet---v2.R	/^Mat.Sel.Var <- permutations(n = 2, r = nb.cov, v = c(TRUE, FALSE), repeats = TRUE)$/;"	g
Nb.Dates.Obs	data/DesmanScat.R	/^Nb.Dates.Obs <- length(Dates)$/;"	g
Nb.Latrines	data/DesmanScat.R	/^Nb.Latrines <- nrow(Desman)$/;"	g
Res	Fitting_model_with_random_effet (v3).R	/^  Res <- Res[ordre, ]$/;"	g
Res	Fitting_model_with_random_effet (v3).R	/^Res <- as.data.frame(Res)$/;"	g
Res	Fitting_model_with_random_effet (v3).R	/^Res <- matrix(nrow = nb.sous.model, ncol = 4+nb.cov)$/;"	g
Res	Fitting_model_without_random_effet---v2.R	/^Res <- Res[ordre, ]$/;"	g
Res	Fitting_model_without_random_effet---v2.R	/^Res <- as.data.frame(Res)$/;"	g
Res	Fitting_model_without_random_effet---v2.R	/^Res <- matrix(nrow = nb.sous.model, ncol = 3+nb.cov)$/;"	g
Sel.Var	Fitting_model_with_random_effet (v3).R	/^  Sel.Var <- Mat.Sel.Var[i, ]$/;"	g
Sel.Var	Fitting_model_without_random_effet---v2.R	/^  Sel.Var <- Mat.Sel.Var[i, ]$/;"	g
Shared.LogVraisemblance.MultCov	Fitting_model_with_random_effet (v3).R	/^Shared.LogVraisemblance.MultCov <- function(par) {$/;"	f
Shared.LogVraisemblance.NoCov	Fitting_model_with_random_effet (v3).R	/^Shared.LogVraisemblance.NoCov <- function(par) {$/;"	f
Shared.LogVraisemblance.SingleCov	Fitting_model_with_random_effet (v3).R	/^Shared.LogVraisemblance.SingleCov <- function(par) {$/;"	f
Z	Fitting_model_with_random_effet (v3).R	/^  Z <- Df[, id.col.cov[Sel.Var]]$/;"	g
Z	Fitting_model_without_random_effet---v2.R	/^  Z <- Df[, id.col.cov[Sel.Var]]$/;"	g
aic	Fitting_model_with_random_effet (v3).R	/^    aic <- -2*fit$value + 2*length(par)$/;"	g
aic	Fitting_model_without_random_effet---v2.R	/^    aic <- -2*fit$value + 2*length(par)$/;"	g
anonFuncc7e34be80100	Fitting_model_with_random_effet (v3).R	/^    res[i] <- integrate(f = function(w){sapply(w,faux)}, lower = 0, upper = Inf)$value$/;"	f	function:Shared.LogVraisemblance.NoCov
anonFuncc7e34be80200	Fitting_model_with_random_effet (v3).R	/^    res[i] <- integrate(f = function(w){sapply(w,faux)}, lower = 0, upper = Inf)$value$/;"	f	function:Shared.LogVraisemblance.SingleCov
anonFuncc7e34be80300	Fitting_model_with_random_effet (v3).R	/^    res[i] <- integrate(f = function(w){sapply(w,faux)}, lower = 0, upper = Inf)$value$/;"	f	function:Shared.LogVraisemblance.MultCov
anonList32ad01550307	Fitting_model_without_random_effet---v2.R	/^    fit <- optim(par =  lpar.init, fn = LogVraisemblance.NoCov, control = list(fnscale = -1), me/;"	L
anonList32ad01550407	Fitting_model_without_random_effet---v2.R	/^    fit <- optim(par =  lpar.init, fn = LogVraisemblance.SingleCov, control = list(fnscale = -1)/;"	L
anonList32ad01550507	Fitting_model_without_random_effet---v2.R	/^    fit <- optim(par =  lpar.init, fn = LogVraisemblance.MultCov, control = list(fnscale = -1), /;"	L
anonListc7e34be80607	Fitting_model_with_random_effet (v3).R	/^    fit <- try(optim(par =  par.init, fn = Shared.LogVraisemblance.NoCov, control = list(fnscale/;"	L
anonListc7e34be80707	Fitting_model_with_random_effet (v3).R	/^    fit <- try(optim(par =  par.init, fn = Shared.LogVraisemblance.SingleCov, control = list(fns/;"	L
anonListc7e34be80807	Fitting_model_with_random_effet (v3).R	/^    fit <- try(optim(par = par.init, fn = Shared.LogVraisemblance.MultCov, control = list(fnscal/;"	L
anonVec32ad01550106	Fitting_model_without_random_effet---v2.R	/^Mat.Sel.Var <- permutations(n = 2, r = nb.cov, v = c(TRUE, FALSE), repeats = TRUE)$/;"	c
anonVecc7e34be80406	Fitting_model_with_random_effet (v3).R	/^Mat.Sel.Var <- permutations(n = 2, r = nb.cov, v = c(TRUE, FALSE), repeats = TRUE)$/;"	c
aux	Fitting_model_with_random_effet (v3).R	/^      aux <- prod(tmp)*dgamma(x = w, shape = exp(ltheta), scale = 1\/exp(ltheta))$/;"	v	function:Shared.LogVraisemblance.MultCov.faux
aux	Fitting_model_with_random_effet (v3).R	/^      aux <- prod(tmp)*dgamma(x = w, shape = exp(ltheta), scale = 1\/exp(ltheta))$/;"	v	function:Shared.LogVraisemblance.NoCov.faux
aux	Fitting_model_with_random_effet (v3).R	/^      aux <- prod(tmp)*dgamma(x = w, shape = exp(ltheta), scale = 1\/exp(ltheta))$/;"	v	function:Shared.LogVraisemblance.SingleCov.faux
aux1	Fitting_model_with_random_effet (v3).R	/^        aux1 <- pweibull(q = Df.tmp$durationd[j], lower.tail = FALSE, shape = exp(lbeta), $/;"	v	function:Shared.LogVraisemblance.MultCov.faux
aux1	Fitting_model_with_random_effet (v3).R	/^        aux1 <- pweibull(q = Df.tmp$durationd[j], lower.tail = FALSE, shape = exp(lbeta), $/;"	v	function:Shared.LogVraisemblance.SingleCov.faux
aux1	Fitting_model_with_random_effet (v3).R	/^        aux1 <- pweibull(q = Df.tmp$durationd[j], scale = w*exp(lalpha), shape = exp(lbeta), low/;"	v	function:Shared.LogVraisemblance.NoCov.faux
aux1	Fitting_model_with_random_effet (v3).R	/^    aux1 <- pweibull(q = Df$durationd[j], lower.tail = FALSE, shape = exp(lbeta), $/;"	v	function:LogVraisemblance.MultCov
aux1	Fitting_model_without_random_effet---v2.R	/^    aux1 <- pweibull(q = Df$durationd[i], lower.tail = FALSE, shape = exp(lbeta), $/;"	v	function:LogVraisemblance.SingleCov
aux1	Fitting_model_without_random_effet---v2.R	/^    aux1 <- pweibull(q = Df$durationd[i], scale = exp(lalpha), shape = exp(lbeta), lower.tail = /;"	v	function:LogVraisemblance.NoCov
aux1	Fitting_model_without_random_effet---v2.R	/^    aux1 <- pweibull(q = Df$durationd[j], lower.tail = FALSE, shape = exp(lbeta), $/;"	v	function:LogVraisemblance.MultCov
aux2	Fitting_model_with_random_effet (v3).R	/^        aux2 <- pweibull(q = Df.tmp$durationg[j], lower.tail = FALSE, shape = exp(lbeta), $/;"	v	function:Shared.LogVraisemblance.MultCov.faux
aux2	Fitting_model_with_random_effet (v3).R	/^        aux2 <- pweibull(q = Df.tmp$durationg[j], lower.tail = FALSE, shape = exp(lbeta), $/;"	v	function:Shared.LogVraisemblance.SingleCov.faux
aux2	Fitting_model_with_random_effet (v3).R	/^        aux2 <- pweibull(q = Df.tmp$durationg[j], scale = w*exp(lalpha), shape = exp(lbeta), low/;"	v	function:Shared.LogVraisemblance.NoCov.faux
aux2	Fitting_model_with_random_effet (v3).R	/^    aux2 <- pweibull(q = Df$durationg[j], lower.tail = FALSE, shape = exp(lbeta), $/;"	v	function:LogVraisemblance.MultCov
aux2	Fitting_model_without_random_effet---v2.R	/^    aux2 <- pweibull(q = Df$durationg[i], lower.tail = FALSE, shape = exp(lbeta), $/;"	v	function:LogVraisemblance.SingleCov
aux2	Fitting_model_without_random_effet---v2.R	/^    aux2 <- pweibull(q = Df$durationg[i], scale = exp(lalpha), shape = exp(lbeta), lower.tail = /;"	v	function:LogVraisemblance.NoCov
aux2	Fitting_model_without_random_effet---v2.R	/^    aux2 <- pweibull(q = Df$durationg[j], lower.tail = FALSE, shape = exp(lbeta), $/;"	v	function:LogVraisemblance.MultCov
date.0	data/DesmanScat.R	/^    date.0 <- Dates[idx[k]-1]$/;"	g
date.0	data/DesmanScat.R	/^  date.0 <- Dates[1]$/;"	g
date.left	data/DesmanScat.R	/^    date.left <- Dates[idx[k]-2]$/;"	g
date.right	data/DesmanScat.R	/^    date.right <- Dates[idx[k]-1]$/;"	g
event	Latrine_as_cov.R	/^event <- rep(1, length = nrow(DesmanFeb24))$/;"	g
event	Latrine_as_cov.R	/^event <- rep(1, length = nrow(Df))$/;"	g
event.v2	Latrine_as_cov.R	/^event.v2 <- event[-idx]$/;"	g
event.v3	Latrine_as_cov.R	/^event.v3 <- c(event, event)$/;"	c
faux	Fitting_model_with_random_effet (v3).R	/^    faux <- function(w) {$/;"	f	function:Shared.LogVraisemblance.MultCov
faux	Fitting_model_with_random_effet (v3).R	/^    faux <- function(w) {$/;"	f	function:Shared.LogVraisemblance.NoCov
faux	Fitting_model_with_random_effet (v3).R	/^    faux <- function(w) {$/;"	f	function:Shared.LogVraisemblance.SingleCov
fit	Fitting_model_with_random_effet (v3).R	/^    fit <- try(optim(par =  par.init, fn = Shared.LogVraisemblance.NoCov, control = list(fnscale/;"	g
fit	Fitting_model_with_random_effet (v3).R	/^    fit <- try(optim(par =  par.init, fn = Shared.LogVraisemblance.SingleCov, control = list(fns/;"	g
fit	Fitting_model_with_random_effet (v3).R	/^    fit <- try(optim(par = par.init, fn = Shared.LogVraisemblance.MultCov, control = list(fnscal/;"	g
fit	Fitting_model_without_random_effet---v2.R	/^    fit <- optim(par =  lpar.init, fn = LogVraisemblance.MultCov, control = list(fnscale = -1), /;"	g
fit	Fitting_model_without_random_effet---v2.R	/^    fit <- optim(par =  lpar.init, fn = LogVraisemblance.NoCov, control = list(fnscale = -1), me/;"	g
fit	Fitting_model_without_random_effet---v2.R	/^    fit <- optim(par =  lpar.init, fn = LogVraisemblance.SingleCov, control = list(fnscale = -1)/;"	g
fnscale	Fitting_model_with_random_effet (v3).R	/^    fit <- try(optim(par =  par.init, fn = Shared.LogVraisemblance.NoCov, control = list(fnscale/;"	n	list:anonListc7e34be80607
fnscale	Fitting_model_with_random_effet (v3).R	/^    fit <- try(optim(par =  par.init, fn = Shared.LogVraisemblance.SingleCov, control = list(fns/;"	n	list:anonListc7e34be80707
fnscale	Fitting_model_with_random_effet (v3).R	/^    fit <- try(optim(par = par.init, fn = Shared.LogVraisemblance.MultCov, control = list(fnscal/;"	n	list:anonListc7e34be80807
fnscale	Fitting_model_without_random_effet---v2.R	/^    fit <- optim(par =  lpar.init, fn = LogVraisemblance.MultCov, control = list(fnscale = -1), /;"	n	list:anonList32ad01550507
fnscale	Fitting_model_without_random_effet---v2.R	/^    fit <- optim(par =  lpar.init, fn = LogVraisemblance.NoCov, control = list(fnscale = -1), me/;"	n	list:anonList32ad01550307
fnscale	Fitting_model_without_random_effet---v2.R	/^    fit <- optim(par =  lpar.init, fn = LogVraisemblance.SingleCov, control = list(fnscale = -1)/;"	n	list:anonList32ad01550407
gamma	Fitting_model_with_random_effet (v3).R	/^  gamma <- par[3:(3+ncol(Z)-1)]$/;"	v	function:LogVraisemblance.MultCov
gamma	Fitting_model_with_random_effet (v3).R	/^  gamma <- par[4:(4+ncol(Z)-1)]$/;"	v	function:Shared.LogVraisemblance.MultCov
gamma	Fitting_model_with_random_effet (v3).R	/^  gamma <- par[4]$/;"	v	function:Shared.LogVraisemblance.SingleCov
gamma	Fitting_model_without_random_effet---v2.R	/^  gamma <- par[3:(3+ncol(Z)-1)]$/;"	v	function:LogVraisemblance.MultCov
gamma	Fitting_model_without_random_effet---v2.R	/^  gamma <- par[3]$/;"	v	function:LogVraisemblance.SingleCov
i	Fitting_model_with_random_effet (v3).R	/^  for (i in 1:n) {$/;"	v	function:Shared.LogVraisemblance.MultCov
i	Fitting_model_with_random_effet (v3).R	/^  for (i in 1:n) {$/;"	v	function:Shared.LogVraisemblance.NoCov
i	Fitting_model_with_random_effet (v3).R	/^  for (i in 1:n) {$/;"	v	function:Shared.LogVraisemblance.SingleCov
i	Fitting_model_with_random_effet (v3).R	/^for (i in 1:n) {$/;"	g
i	Fitting_model_with_random_effet (v3).R	/^for (i in 1:nb.sous.model) {$/;"	g
i	Fitting_model_without_random_effet---v2.R	/^  for (i in 1:nrow(Df)) {$/;"	v	function:LogVraisemblance.NoCov
i	Fitting_model_without_random_effet---v2.R	/^  for (i in 1:nrow(Df)) {$/;"	v	function:LogVraisemblance.SingleCov
i	Fitting_model_without_random_effet---v2.R	/^for (i in 1:nb.sous.model) {$/;"	g
i	data/DesmanScat.R	/^for (i in 1:Nb.Latrines) {$/;"	g
id.col.cov	Fitting_model_with_random_effet (v3).R	/^id.col.cov <- (ncol(Df)-nb.cov+1):ncol(Df)$/;"	g
id.col.cov	Fitting_model_without_random_effet---v2.R	/^id.col.cov <- (ncol(Df)-nb.cov+1):ncol(Df)$/;"	g
idx	Fitting_model_with_random_effet (v3).R	/^    idx <- which(Df$siteID == Latrine[i])$/;"	v	function:Shared.LogVraisemblance.MultCov
idx	Fitting_model_with_random_effet (v3).R	/^    idx <- which(Df$siteID == Latrine[i])$/;"	v	function:Shared.LogVraisemblance.NoCov
idx	Fitting_model_with_random_effet (v3).R	/^    idx <- which(Df$siteID == Latrine[i])$/;"	v	function:Shared.LogVraisemblance.SingleCov
idx	Fitting_model_with_random_effet (v3).R	/^idx <- which(is.na(Df$durationg))$/;"	g
idx	Fitting_model_without_random_effet---v2.R	/^idx <- which(is.na(Df$durationg))$/;"	g
idx	Latrine_as_cov.R	/^idx <- which(is.na(DesmanFeb24$durationg))$/;"	g
idx	Latrine_as_cov.R	/^idx <- which(is.na(Df$durationg))$/;"	g
idx	data/DesmanScat.R	/^  idx <- which(Desman[i, ] == 1)$/;"	g
j	Fitting_model_with_random_effet (v3).R	/^      for (j in 1:m[i]) {$/;"	v	function:Shared.LogVraisemblance.MultCov.faux
j	Fitting_model_with_random_effet (v3).R	/^      for (j in 1:m[i]) {$/;"	v	function:Shared.LogVraisemblance.NoCov.faux
j	Fitting_model_with_random_effet (v3).R	/^      for (j in 1:m[i]) {$/;"	v	function:Shared.LogVraisemblance.SingleCov.faux
j	Fitting_model_with_random_effet (v3).R	/^  for (j in 1:nrow(Df)) {$/;"	v	function:LogVraisemblance.MultCov
j	Fitting_model_without_random_effet---v2.R	/^  for (j in 1:nrow(Df)) {$/;"	v	function:LogVraisemblance.MultCov
k	data/DesmanScat.R	/^  for (k in 1:r) {$/;"	g
lalpha	Fitting_model_with_random_effet (v3).R	/^  lalpha <- par[1]$/;"	v	function:LogVraisemblance.MultCov
lalpha	Fitting_model_with_random_effet (v3).R	/^  lalpha <- par[1]$/;"	v	function:Shared.LogVraisemblance.MultCov
lalpha	Fitting_model_with_random_effet (v3).R	/^  lalpha <- par[1]$/;"	v	function:Shared.LogVraisemblance.NoCov
lalpha	Fitting_model_with_random_effet (v3).R	/^  lalpha <- par[1]$/;"	v	function:Shared.LogVraisemblance.SingleCov
lalpha	Fitting_model_without_random_effet---v2.R	/^  lalpha <- par[1]$/;"	v	function:LogVraisemblance.MultCov
lalpha	Fitting_model_without_random_effet---v2.R	/^  lalpha <- par[1]$/;"	v	function:LogVraisemblance.NoCov
lalpha	Fitting_model_without_random_effet---v2.R	/^  lalpha <- par[1]$/;"	v	function:LogVraisemblance.SingleCov
latrine	data/DesmanScat.R	/^  latrine <- rep(x = Desman$Latrine_id[k], times = r)$/;"	g
lbeta	Fitting_model_with_random_effet (v3).R	/^  lbeta <- par[2]$/;"	v	function:LogVraisemblance.MultCov
lbeta	Fitting_model_with_random_effet (v3).R	/^  lbeta <- par[2]$/;"	v	function:Shared.LogVraisemblance.MultCov
lbeta	Fitting_model_with_random_effet (v3).R	/^  lbeta <- par[2]$/;"	v	function:Shared.LogVraisemblance.NoCov
lbeta	Fitting_model_with_random_effet (v3).R	/^  lbeta <- par[2]$/;"	v	function:Shared.LogVraisemblance.SingleCov
lbeta	Fitting_model_without_random_effet---v2.R	/^  lbeta <- par[2]$/;"	v	function:LogVraisemblance.MultCov
lbeta	Fitting_model_without_random_effet---v2.R	/^  lbeta <- par[2]$/;"	v	function:LogVraisemblance.NoCov
lbeta	Fitting_model_without_random_effet---v2.R	/^  lbeta <- par[2]$/;"	v	function:LogVraisemblance.SingleCov
left	data/DesmanScat.R	/^  left <- vector(mode = "numeric", length = r)$/;"	g
lower	Fitting_model_with_random_effet (v3).R	/^    res[i] <- integrate(f = function(w){sapply(w,faux)}, lower = 0, upper = Inf)$value$/;"	v	function:Shared.LogVraisemblance.MultCov.anonFuncc7e34be80300
lower	Fitting_model_with_random_effet (v3).R	/^    res[i] <- integrate(f = function(w){sapply(w,faux)}, lower = 0, upper = Inf)$value$/;"	v	function:Shared.LogVraisemblance.NoCov.anonFuncc7e34be80100
lower	Fitting_model_with_random_effet (v3).R	/^    res[i] <- integrate(f = function(w){sapply(w,faux)}, lower = 0, upper = Inf)$value$/;"	v	function:Shared.LogVraisemblance.SingleCov.anonFuncc7e34be80200
lpar.init	Fitting_model_without_random_effet---v2.R	/^    lpar.init <- c(lpar.init.base, 0)$/;"	c
lpar.init	Fitting_model_without_random_effet---v2.R	/^    lpar.init <- c(lpar.init.base, rep(x = 0, times = sum(Sel.Var)))$/;"	c
lpar.init	Fitting_model_without_random_effet---v2.R	/^    lpar.init <- lpar.init.base$/;"	g
lpar.init.base	Fitting_model_without_random_effet---v2.R	/^lpar.init.base <- log(par.init.base)$/;"	g
ltheta	Fitting_model_with_random_effet (v3).R	/^  ltheta <- par[3]$/;"	v	function:Shared.LogVraisemblance.MultCov
ltheta	Fitting_model_with_random_effet (v3).R	/^  ltheta <- par[3]$/;"	v	function:Shared.LogVraisemblance.NoCov
ltheta	Fitting_model_with_random_effet (v3).R	/^  ltheta <- par[3]$/;"	v	function:Shared.LogVraisemblance.SingleCov
m	Fitting_model_with_random_effet (v3).R	/^m <- vector(mode = "integer", length = n)$/;"	g
method	Fitting_model_with_random_effet (v3).R	/^    fit <- try(optim(par =  par.init, fn = Shared.LogVraisemblance.NoCov, control = list(fnscale/;"	n	list:anonListc7e34be80607
method	Fitting_model_with_random_effet (v3).R	/^    fit <- try(optim(par = par.init, fn = Shared.LogVraisemblance.MultCov, control = list(fnscal/;"	n	list:anonListc7e34be80807
method	Fitting_model_without_random_effet---v2.R	/^    fit <- optim(par =  lpar.init, fn = LogVraisemblance.MultCov, control = list(fnscale = -1), /;"	n	list:anonList32ad01550507
method	Fitting_model_without_random_effet---v2.R	/^    fit <- optim(par =  lpar.init, fn = LogVraisemblance.NoCov, control = list(fnscale = -1), me/;"	n	list:anonList32ad01550307
method	Fitting_model_without_random_effet---v2.R	/^    fit <- optim(par =  lpar.init, fn = LogVraisemblance.SingleCov, control = list(fnscale = -1)/;"	n	list:anonList32ad01550407
n	Fitting_model_with_random_effet (v3).R	/^n <- length(Latrine)$/;"	g
nb.cov	Fitting_model_with_random_effet (v3).R	/^  nb.cov <- ncol(Z)$/;"	v	function:LogVraisemblance.MultCov
nb.cov	Fitting_model_with_random_effet (v3).R	/^  nb.cov <- ncol(Z)$/;"	v	function:Shared.LogVraisemblance.MultCov
nb.cov	Fitting_model_with_random_effet (v3).R	/^nb.cov <- ncol(x = Mat.Cov) -1$/;"	g
nb.cov	Fitting_model_without_random_effet---v2.R	/^  nb.cov <- ncol(Z)$/;"	v	function:LogVraisemblance.MultCov
nb.cov	Fitting_model_without_random_effet---v2.R	/^nb.cov <- ncol(x = Mat.Cov) -1$/;"	g
nb.sous.model	Fitting_model_with_random_effet (v3).R	/^nb.sous.model <- nrow(Mat.Sel.Var)$/;"	g
nb.sous.model	Fitting_model_without_random_effet---v2.R	/^nb.sous.model <- nrow(Mat.Sel.Var)$/;"	g
ordre	Fitting_model_with_random_effet (v3).R	/^  ordre <- order(Res$AIC)$/;"	g
ordre	Fitting_model_without_random_effet---v2.R	/^ordre <- order(Res$AIC)$/;"	g
par	Fitting_model_with_random_effet (v3).R	/^    par <- exp(fit$par)$/;"	g
par	Fitting_model_with_random_effet (v3).R	/^    par <- fit$par$/;"	g
par	Fitting_model_without_random_effet---v2.R	/^    par <- fit$par$/;"	g
par.init	Fitting_model_with_random_effet (v3).R	/^    par.init <- c(par.init.base, 0)$/;"	c
par.init	Fitting_model_with_random_effet (v3).R	/^    par.init <- c(par.init.base, rep(x = 0, times = sum(Sel.Var)))$/;"	c
par.init	Fitting_model_with_random_effet (v3).R	/^    par.init <- log(par.init.base)$/;"	g
par.init.base	Fitting_model_with_random_effet (v3).R	/^par.init.base <- c(mean((Df$durationd + Df$durationg)[-idx]\/2), 1, 1)$/;"	c
par.init.base	Fitting_model_without_random_effet---v2.R	/^par.init.base <- c(mean((Df$durationd + Df$durationg)[-idx]\/2), 1)$/;"	c
r	data/DesmanScat.R	/^  r <- length(idx)$/;"	g
repeats	Fitting_model_with_random_effet (v3).R	/^Mat.Sel.Var <- permutations(n = 2, r = nb.cov, v = c(TRUE, FALSE), repeats = TRUE)$/;"	n	vector:anonVecc7e34be80406
repeats	Fitting_model_without_random_effet---v2.R	/^Mat.Sel.Var <- permutations(n = 2, r = nb.cov, v = c(TRUE, FALSE), repeats = TRUE)$/;"	n	vector:anonVec32ad01550106
res	Fitting_model_with_random_effet (v3).R	/^  res <- vector(mode = "numeric", length = n)$/;"	v	function:Shared.LogVraisemblance.MultCov
res	Fitting_model_with_random_effet (v3).R	/^  res <- vector(mode = "numeric", length = n)$/;"	v	function:Shared.LogVraisemblance.NoCov
res	Fitting_model_with_random_effet (v3).R	/^  res <- vector(mode = "numeric", length = n)$/;"	v	function:Shared.LogVraisemblance.SingleCov
res	Fitting_model_with_random_effet (v3).R	/^  res <- vector(mode = "numeric", length = nrow(Df))$/;"	v	function:LogVraisemblance.MultCov
res	Fitting_model_without_random_effet---v2.R	/^  res <- vector(mode = "numeric", length = nrow(Df))$/;"	v	function:LogVraisemblance.MultCov
res	Fitting_model_without_random_effet---v2.R	/^  res <- vector(mode = "numeric", length = nrow(Df))$/;"	v	function:LogVraisemblance.NoCov
res	Fitting_model_without_random_effet---v2.R	/^  res <- vector(mode = "numeric", length = nrow(Df))$/;"	v	function:LogVraisemblance.SingleCov
right	data/DesmanScat.R	/^  right <- vector(mode = "numeric", length = r)$/;"	g
tmp	Fitting_model_with_random_effet (v3).R	/^      tmp <- vector(mode = "numeric", length = m[i])$/;"	v	function:Shared.LogVraisemblance.MultCov.faux
tmp	Fitting_model_with_random_effet (v3).R	/^      tmp <- vector(mode = "numeric", length = m[i])$/;"	v	function:Shared.LogVraisemblance.NoCov.faux
tmp	Fitting_model_with_random_effet (v3).R	/^      tmp <- vector(mode = "numeric", length = m[i])$/;"	v	function:Shared.LogVraisemblance.SingleCov.faux
upper	Fitting_model_with_random_effet (v3).R	/^    res[i] <- integrate(f = function(w){sapply(w,faux)}, lower = 0, upper = Inf)$value$/;"	v	function:Shared.LogVraisemblance.MultCov.anonFuncc7e34be80300
upper	Fitting_model_with_random_effet (v3).R	/^    res[i] <- integrate(f = function(w){sapply(w,faux)}, lower = 0, upper = Inf)$value$/;"	v	function:Shared.LogVraisemblance.NoCov.anonFuncc7e34be80100
upper	Fitting_model_with_random_effet (v3).R	/^    res[i] <- integrate(f = function(w){sapply(w,faux)}, lower = 0, upper = Inf)$value$/;"	v	function:Shared.LogVraisemblance.SingleCov.anonFuncc7e34be80200
